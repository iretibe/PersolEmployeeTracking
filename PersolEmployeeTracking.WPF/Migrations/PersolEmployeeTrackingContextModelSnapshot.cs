// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersolEmployeeTracking.WPF.Databases;

namespace PersolEmployeeTracking.WPF.Migrations
{
    [DbContext(typeof(PersolEmployeeTrackingContext))]
    partial class PersolEmployeeTrackingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DEPARTMENT");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("date");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("ImagePath")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("isAdmin");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("PositionID");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UserNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.ToTable("EMPLOYEE");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Explanation")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("PermissionAmount")
                        .HasColumnType("int");

                    b.Property<int>("PermissionState")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("UserNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PermissionState");

                    b.ToTable("PERMISSION");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.PermissonState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PermissionState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PERMISSONSTATE");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("PositionName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("POSITION");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("Month");

                    b.ToTable("SALARY");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.SalaryMonth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MonthName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("SALARYMONTH");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<string>("TaskContent")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("TaskDeliveryDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("TaskStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("TaskState")
                        .HasColumnType("int");

                    b.Property<string>("TaskTitle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TaskState");

                    b.ToTable("TASK");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.TaskState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameState")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("TASKSTATE");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Employee", b =>
                {
                    b.HasOne("PersolEmployeeTracking.WPF.Databases.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_EMPLOYEE_DEPARTMENT")
                        .IsRequired();

                    b.HasOne("PersolEmployeeTracking.WPF.Databases.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK_EMPLOYEE_POSITION")
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Permission", b =>
                {
                    b.HasOne("PersolEmployeeTracking.WPF.Databases.Employee", "Employee")
                        .WithMany("Permissions")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_PERMISSION_EMPLOYEE")
                        .IsRequired();

                    b.HasOne("PersolEmployeeTracking.WPF.Databases.PermissonState", "PermissionStateNavigation")
                        .WithMany("Permissions")
                        .HasForeignKey("PermissionState")
                        .HasConstraintName("FK_PERMISSION_PERMISSONSTATE")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("PermissionStateNavigation");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Position", b =>
                {
                    b.HasOne("PersolEmployeeTracking.WPF.Databases.Department", "Department")
                        .WithMany("Positions")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_POSITION_DEPARTMENT")
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Salary", b =>
                {
                    b.HasOne("PersolEmployeeTracking.WPF.Databases.Employee", "Employee")
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_SALARY_EMPLOYEE")
                        .IsRequired();

                    b.HasOne("PersolEmployeeTracking.WPF.Databases.SalaryMonth", "MonthNavigation")
                        .WithMany("Salaries")
                        .HasForeignKey("Month")
                        .HasConstraintName("FK_SALARY_SALARYMONTH")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("MonthNavigation");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Task", b =>
                {
                    b.HasOne("PersolEmployeeTracking.WPF.Databases.Employee", "Employee")
                        .WithMany("Tasks")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_TASK_EMPLOYEE");

                    b.HasOne("PersolEmployeeTracking.WPF.Databases.TaskState", "TaskStateNavigation")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskState")
                        .HasConstraintName("FK_TASK_TASKSTATE");

                    b.Navigation("Employee");

                    b.Navigation("TaskStateNavigation");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Positions");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Employee", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("Salaries");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.PermissonState", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.SalaryMonth", b =>
                {
                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("PersolEmployeeTracking.WPF.Databases.TaskState", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
